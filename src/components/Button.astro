---
interface Props {
  href?: string;
  type?: "button" | "submit";
  variant?: "primary" | "secondary" | "outline" | "accent";
  class?: string;
}

const {
  href,
  type = "button",
  variant = "primary",
  class: className,
  ...props
} = Astro.props;

const baseStyles =
  "inline-flex items-center justify-center px-6 py-3 rounded-full font-display font-medium transition-all duration-300 hover:scale-105";
const variants = {
  primary:
    "bg-primary-600 text-white hover:shadow-lg hover:shadow-primary-500/50 hover:bg-primary-500 shadow-primary-500/20 shadow-lg",
  secondary:
    "bg-primary-600 text-white hover:shadow-lg hover:shadow-primary-500/50 hover:bg-primary-500 shadow-primary-500/20 shadow-lg",
  outline:
    "border-2 border-primary-600 text-primary-400 hover:bg-primary-600/20 hover:border-primary-400 hover:text-white",
  accent:
    "bg-zinc-900/80 text-primary-400 hover:bg-zinc-800 hover:text-primary-300 border border-zinc-700",
};

const styles = `${baseStyles} ${variants[variant]} ${className}`;

const Component = href ? "a" : "button";
---

<Component {...href ? { href } : { type }} class={styles} {...props}>
  <slot />
</Component>
